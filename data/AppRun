#!/bin/bash

export HERE="$(dirname "$(readlink -f "${0}")")"

#---------------------------------------------------------------------------

[ "${APPIMAGE}" = "" ] && export APPIMAGE=${0}

APPIMAGE_DIR=$(dirname "${APPIMAGE}")
[ "${APPIMAGE_DIR}" = "${PWD}" ] && {
  export APPIMAGE="./"$(basename "${APPIMAGE}")
}

#---------------------------------------------------------------------------

[ "${#}" = "0" ] && {
    echo
    echo "You must ${1} provide at least two parameters"
    echo "It can be done with:"
    echo
    echo "  ${APPIMAGE} [command] [bottle name]"
    echo
    echo "Please run ${APPIMAGE} --help for more info"
    echo
    exit 1
}

#---------------------------------------------------------------------------

OPTION="${1}"
shift

#---------------------------------------------------------------------------

. ${HERE}/BottleTool.sh
. ${HERE}/AppDirTool.sh
. ${HERE}/FlagsTool.sh
. ${HERE}/Help.sh
. ${HERE}/Recipe.sh
. ${HERE}/ExtraTools.sh

#---------------------------------------------------------------------------

[ "${OPTION}" = "--recipe" ] && {
  [ ! -f "${1}" ] && {
    wget -q "https://raw.githubusercontent.com/sudo-give-me-coffee/wine_recipes/master/apps%2032%20bit/${1}" -O "${1}" && {
      recipe.run "${1}"
      exit ${?}
    } || {
      rm -rf "${1}"
    }
    echo "Error: Recipe file '${1}' not found"
    exit 1
  }
  recipe.run "${1}"
  exit ${?}
}

#---------------------------------------------------------------------------

[ -z "${BOTTLE_NAME}" ] && {
  export BOTTLE_NAME="$(echo ${1} | sed 's/[[:space:]]//g')"
  shift
}

[ "${BOTTLE_NAME}" = "" ] && {
    echo
    echo "You must ${1} provide a bottle name"
    echo "It can be done with:"
    echo
    echo "${APPIMAGE} ${OPTION} [bottle name]"
    echo
    echo "Please run ${APPIMAGE} --help for more info"
    echo
    exit 1
}

#---------------------------------------------------------------------------

type bottle.${OPTION} &> /dev/null && {
  bottle.${OPTION} "${1}" "${2}"
  exit ${?}
}

type flags.${OPTION} &> /dev/null && {
  flags.${OPTION} "${1}"
  exit ${?}
}

type appdir.${OPTION} &> /dev/null && {
  appdir.${OPTION} "${1}"
  exit ${?}
}

#---------------------------------------------------------------------------

[ "${OPTION}" == "--winetricks" ] && {
  extratools.winetricks ${*}
  exit ${?}
}

[ -f "${BOTTLE_NAME}/prefix/drive_c/windows/system32/${OPTION}.exe" ] && {
  extratools.runInside "${BOTTLE_NAME}/prefix/drive_c/windows/system32/${OPTION}.exe"
  exit ${?}
}

[ -f "${BOTTLE_NAME}/prefix/drive_c/$(echo ${OPTION} | cut -c 4-)" ] && {
  extratools.runInside "${OPTION}"
  exit ${?}
}

#---------------------------------------------------------------------------

[ "${OPTION}" = "--help" ] && help.main && exit 0

echo "Error: '${OPTION}' is not a valid command"
echo
echo "  Please run ${APPIMAGE} --help for more info"
echo

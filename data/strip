#!/bin/bash
#                                                                                    #
#   This tool allows reduction size of AppImage by performing some actions           #
#   such as transforming files in symlinks or stripping WINE files.                  #
#                                                                                    #
#   Each of these parameters remove a set of files:                                  #
#                                                                                    #
#     --purge-mesa3D  ->  AppDir/usr/lib/i386-linux-gnu/dri (180 MB)                 #
#     --purge-windows  ->  AppDir/app/windows (50 MB)                                #
#     --purge-gecko    ->  AppDir/app/windows/system32/gecko (91 MB)                 #
#     --purge-mono     ->  AppDir/app/windows/system32/mono (255 MB)                 #
#                                                                                    #
#   Notes:                                                                           #
#     * These sizes is based on unpacked AppImage, packaged will be different        #
#     * Each thing removed has consequences                                          #
#         - Mesa 3D is required by DirectX games e apps                              #
#         - Windows is required by complex apps and display .chm files               #
#           - If you purge Windows, Mono and Gecko are purged automaticaly           #
#         - Gecko is required to display HTML pages in most apps and .chm files      #
#         - Mono is required by .NET apps (may be replaced by .NET Framework)        #
#     * This tool will no ask for confirmation
#                                                                                    #
######################################################################################
#                                                                                    #
#   Copyright 2019 Natanael Barbosa Santos                                           #
#                                                                                    #
#   Permission is hereby granted, free of charge, to any person obtaining a          #
#   copy of this software and associated documentation files (the "Software"),       #
#   to deal in the Software without restriction, including without limitation        #
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,         #
#   and/or sell copies of the Software, and to permit persons to whom the            #
#   Software is furnished to do so, subject to the following conditions:             #
#                                                                                    #
#   The above copyright notice and this permission notice shall be included in       #
#   all copies or substantial portions of the Software.                              #
#                                                                                    #
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR       #
#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,         #
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE      #
#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER           #
#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,    #
#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN        #
#   THE SOFTWARE.                                                                    #
#                                                                                    #
######################################################################################

  export HERE="$(dirname "$(readlink -f "${0}")")"

######################################################################################
#                                                                                    #
#   Deduplicate files turning "lib/wine/" in to symlinks to files on "app" dir       #  
#                                                                                    #
######################################################################################

function turnSymlink(){
  # Skip if Windows folder has purged
  [ "${NO_LINK_WINDOWS}" == "1" ] && return 0
  
  echo "Deduplicating files..."

  folder_list=$(find "${HERE}/app/windows" -type f)
  while read -r file_name; do
    app_file=$(basename "${file_name}")
    app_file_hash=$(md5sum "${file_name}" | cut -d' ' -f1)
    if [ -f "${HERE}/lib/wine/${app_file}" ]; then
      wine_file="${HERE}/lib/wine/${app_file}"
      prefix="../.."
    elif [ -f "${HERE}/lib/wine/fakedlls/${app_file}" ]; then
      wine_file="${HERE}/lib/wine/fakedlls/${app_file}"
      prefix="../../.."
    fi
  
    if [ "${wine_file}" != "" ]; then
      wine_file_hash=$(md5sum "${wine_file}" | cut -d' ' -f1)
      if [ "${app_file_hash}" == "${wine_file_hash}" ]; then
        link_target=$(echo "${prefix}/${file_name}" | sed "s|${HERE}/||g")
        link_dir=$(dirname "${wine_file}")
        rm "${wine_file}"
        ln -s "${link_target}" "${link_dir}"
      fi
    fi
    unset wine_file
  done <<< "${folder_list}"
}

function purgeMono(){
  echo "Purging Mono..."

  folder_list=$(find "${HERE}/app/windows/mono" -type f)
  while read -r file_name; do
    echo -n "" > "${file_name}"
  done <<< "${folder_list}"
}

function purgeGecko(){
  echo "Purging Gecko..."

  folder_list=$(find "${HERE}/app/windows/system32/gecko" -type f)
  while read -r file_name; do
    echo -n "" > "${file_name}"
  done <<< "${folder_list}"
}

function purgeTemp(){
  echo "Purging temporary dir..."

  # Remove directory
  rm -rf "${HERE}/include" 
  rm -rf "${HERE}/usr/share/doc" 
  rm -rf "${HERE}/app/windows/Installer"
  rm -rf "${HERE}/app/windows/temp"
  rm -rf "${HERE}/app/users"

  # Recreate as file
  echo -n "" > "${HERE}/app/windows/Installer"
  echo -n "" > "${HERE}/app/windows/temp"
}


function purgeWindows(){
  echo "Purging 'windows' dir..."

  rm -rf "${HERE}/app/windows"
  echo -n "" > "${HERE}/app/windows"
  export NO_LINK_WINDOWS=1
}

function purgeMesa3D(){
  echo "Removing Mesa32..."
  rm -rf "${HERE}/usr/lib/i386-linux-gnu/dri"
}

function printHelp(){
  SELF="$(readlink -f $0)"
  sed -n '2,22 p' "${SELF}" | sed 's/#//g' | sed -e 's/[[:space:]]*$//' | cut -c 1-
  exit 0
}

function printLicense(){
  SELF="$(readlink -f $0)"
  sed -n '24,44 p' "${SELF}" | sed 's/#//g' | sed -e 's/[[:space:]]*$//' | cut -c 3-
  exit 0
}

######################################################################################

if [ "${1}" = "--help" ]; then
  printHelp 
elif [ "${1}" = "--license" ]; then
  printLicense
elif [ "${1}" = "" ]; then
  printHelp 
fi

######################################################################################

if [ -d "${HERE}/drive_c" ]; then
  mv "${HERE}/drive_c" "${HERE}/app"
fi

######################################################################################

purgeTemp

for action in "$@" ;do
  action=$(echo "${action}" | sed 's/-/_/g' | sed -E 's/_([a-z])/\U\1/g')
  if [[ "${action}" = "_Purge"* ]]; then
    action=$(echo "${action}" | sed 's/_P/p/1')
    if [ "$(type -t ${action})" = "function" ]; then
      ${action}
    fi
  fi
done

######################################################################################

turnSymlink

######################################################################################

echo "Done!"


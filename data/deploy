#!/bin/bash
#                                                                                    #
#   This tool turns a WINE prefix on an AppDir. You must pass a YAML with the        #
#   following structure:                                                             #
#                                                                                    #
#     app: <App Name>                                                                #
#     icon: <256px PNG icon path>                                                    #
#     executable: <Path to executable file under drive_c with DOS style>             #
#     categories: <categories separated with ; >                                     #
#     preloader: <Path to preloader script if needed>                                #
#     strip: <Flags to to "strip" script>                                            #
#                                                                                    #
#   An real example:                                                                 #
#                                                                                    #
#     app: VisualG 3.0                                                               #
#     icon: data/visualg.png                                                         #
#     executable: c:\visualg3.0.7\visualg.exe                                        #
#     categories: Development; Education                                             #
#     strip: --purge-mesa3D --purge-mono                                             #
#                                                                                    #
#   Notes:                                                                           #
#     * The "icon" and "preloader" fields are relative to the current                #
#       directory unless you pass a directory starting with a "/"                    #
#     * The "executable" directory must start with "c:" and with inverted            #
#       slashes see "real example" above to see how to do it                         #
#                                                                                    #
######################################################################################
#                                                                                    #
#   Copyright 2019 Natanael Barbosa Santos                                           #
#                                                                                    #
#   Permission is hereby granted, free of charge, to any person obtaining a          #
#   copy of this software and associated documentation files (the "Software"),       #
#   to deal in the Software without restriction, including without limitation        #
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,         #
#   and/or sell copies of the Software, and to permit persons to whom the            #
#   Software is furnished to do so, subject to the following conditions:             #
#                                                                                    #
#   The above copyright notice and this permission notice shall be included in       #
#   all copies or substantial portions of the Software.                              #
#                                                                                    #
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR       #
#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,         #
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE      #
#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER           #
#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,    #
#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN        #
#   THE SOFTWARE.                                                                    #
#                                                                                    #
######################################################################################

  export HERE="$(dirname "$(readlink -f "${0}")")"

######################################################################################

function parse_yaml() {
  local prefix=${2}
  local s
  local w
  local fs
  s='[[:blank:]]*'
  w='[a-zA-Z0-9_]*'
  fs="$(echo @|tr @ '\034')"
  sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
      -e "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |
  awk -F"$fs" '{
    indent = length($1)/2;
    vname[indent] = $2;
    for (i in vname) {if (i > indent) {delete vname[i]}}
        if (length($3) > 0) {
            vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
            printf("%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, $3);
        }
    }' | sed 's/_=/+=/g'
}

function printHelp(){
  SELF="$(readlink -f $0)"
  sed -n '2,26 p' "${SELF}" | sed 's/#//g' | sed -e 's/[[:space:]]*$//' | cut -c 1-
}

function printLicense(){
  SELF="$(readlink -f $0)"
  sed -n '28,48 p' "${SELF}" | sed 's/#//g' | sed -e 's/[[:space:]]*$//' | cut -c 3-
  exit 0
}

function printError(){
  echo "Err: ${@}" > /dev/stderr
  exit 1
}

######################################################################################

if [ "${1}" = "--help" ]; then
  printHelp 
  exit 0
elif [ "${1}" = "--license" ]; then
  printLicense
elif [ "${1}" = "" ]; then
  printHelp 
  exit 0
elif [ ! -f "${1}" ]; then
  printError "YAML file ${1} not found"
fi

######################################################################################

  YAML_FILE=$(readlink -f "${1}")
  eval $(parse_yaml "$YAML_FILE")

######################################################################################

if [ "${app}" = "" ]; then
  printHelp 
  printError "Required field 'app' not found in '${1}' file"
elif [ "${icon}" = "" ]; then
  printHelp 
  printError "Required field 'icon' not found in '${1}' file"
elif [ "${executable}" = "" ]; then
  printError "Required field 'executable' not found in '${1}' file"
  printHelp 
fi

######################################################################################

[ "${categories}" = "" ] && categories="Utility"
   [ ! -f "${icon}" ]    && printError "File '${icon}' not found!"

######################################################################################

executable_file=$(echo "${executable}" | sed 's/\\/\//g' | cut -c 3-)
executable_file="${HOME}/.wine/drive_c${executable_file}"
[ ! -f "${executable_file}" ]  && printError "File '${executable_file}' not found!"

######################################################################################

icon_name=$(basename "${icon}" | cut -d. -f1)

######################################################################################

categories=$(echo ${categories} | sed 's/ //g')

######################################################################################

export WORK_DIR="${PWD}/${icon_name}.AppDir"

######################################################################################

echo "Copying WINE..."

mkdir -p "${WORK_DIR}"
cp -R "${HERE}/." "${WORK_DIR}/."
cp "${icon}" "${WORK_DIR}/"
cp "${icon}" "${WORK_DIR}/.DirIcon"

######################################################################################

echo "Copying drive_c..."
cp -R "${HOME}/.wine/drive_c" "${WORK_DIR}/."

######################################################################################

mv "${WORK_DIR}/WineLauncher" "${WORK_DIR}/AppRun"
chmod +x "${WORK_DIR}/AppRun"

######################################################################################

if [ ! "${preloader}" = "" ]; then
  cp "${preloader}" "${WORK_DIR}/preload.sh"
fi

######################################################################################

echo "[Desktop Entry]"            >  "${WORK_DIR}/${icon_name}.desktop"
echo "Name=${app}"                >> "${WORK_DIR}/${icon_name}.desktop"
echo "Type=Application"           >> "${WORK_DIR}/${icon_name}.desktop"
echo "Categories=${categories};"  >> "${WORK_DIR}/${icon_name}.desktop"
echo "Icon=${icon_name}"          >> "${WORK_DIR}/${icon_name}.desktop"
echo "Exec=wine %f"               >> "${WORK_DIR}/${icon_name}.desktop"
echo "X-WineExec=${executable}"   >> "${WORK_DIR}/${icon_name}.desktop"

######################################################################################

"${WORK_DIR}/strip" ${strip}

######################################################################################

rm "${WORK_DIR}/Wine.png"
rm "${WORK_DIR}/wine.desktop"
rm "${WORK_DIR}/strip"
rm "${WORK_DIR}/deploy"
rm "${WORK_DIR}/bin/cabextract"
rm "${WORK_DIR}/bin/winetricks"

